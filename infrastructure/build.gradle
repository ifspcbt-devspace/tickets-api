plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'br.com.ifsp.tickets'
version = '0.2.0'
description = 'infrastructure'

java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Test).configureEach {
    systemProperty 'file.encoding', 'UTF-8'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation group: 'org.jasypt', name: 'jasypt', version: '1.9.2'

    // mercadopago sdk
    implementation group: 'com.mercadopago', name: 'sdk-java', version: '2.2.0'

    // spring boot
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
    implementation "org.springframework.boot:spring-boot-starter-aop"

    // observability
    implementation platform('io.micrometer:micrometer-bom:1.14.5')
    implementation 'io.micrometer:micrometer-registry-otlp'
    implementation platform('io.micrometer:micrometer-tracing-bom:1.4.4')
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'

    implementation platform('io.opentelemetry:opentelemetry-bom:1.48.0')
    implementation 'io.opentelemetry:opentelemetry-api'
    implementation 'io.opentelemetry:opentelemetry-sdk'
    implementation 'io.opentelemetry:opentelemetry-sdk-trace'
    implementation 'io.opentelemetry:opentelemetry-sdk-metrics'
    implementation 'io.opentelemetry:opentelemetry-sdk-logs'
    implementation 'io.opentelemetry:opentelemetry-sdk-common'
    implementation 'io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi'
    implementation 'io.opentelemetry:opentelemetry-extension-trace-propagators'
    implementation 'io.opentelemetry:opentelemetry-exporter-common'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
    implementation 'io.opentelemetry:opentelemetry-context'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp-common'

    implementation 'jakarta.mail:jakarta.mail-api:2.1.3'
    implementation 'jakarta.activation:jakarta.activation-api:2.1.3'

    implementation("com.squareup.okhttp3:okhttp:4.12.0")

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'org.passay:passay:1.6.2'

    implementation 'io.vavr:vavr:0.10.4'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation 'com.google.zxing:core:3.4.1'
    implementation 'com.google.zxing:javase:3.4.1'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.security:spring-security-test'
}

bootJar {
    archiveFileName.set("tickets-api.${archiveExtension.get()}")
    destinationDirectory = file("../build/libs")
}

test {
    useJUnitPlatform()
}

springBoot {
    buildInfo {
        properties {
            artifact = "tickets-api.jar"
            group = "br.com.ifsp.tickets"
            name = "Tickets API"
            version = "0.2.0"
        }
    }
}
